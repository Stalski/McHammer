<?php
/*
 * @file
 *
 */

/**
 * Implements hook_entity_info().
 */
function mchammer_entity_info() {
  $return['mail_template'] = array(
    'label' => t('Mail template'),
    'label callback' => 'entity_class_label',
    'uri callback' => 'entity_class_uri',
    'entity class' => 'MailTemplateEntity',
    'controller class' => 'EntityAPIController',
    'base table' => 'mchammer_templates',
    'fieldable' => FALSE,
    'module' => 'mchammer',
    'entity keys' => array(
      'id' => 'mtid',
      'bundle' => 'type',
    ),
    'module' => 'mchammer',
    'view modes' => array(
      'full' => array(
        'label' => t('Full content'),
        'custom settings' => FALSE,
       ),
    ),
    'access callback' => 'mail_template_access',
    'metadata controller class' => 'MailTemplateMetadataController'
  );
  return $return;
}

/**
 * Implements hook_entity_property_info().
 */
function mchammer_entity_property_info(&$info) {
  $info = array();
  $properties = &$info['mail_template']['properties'];

  $properties['mtid'] = array(
    'label' => t("Mail template ID"),
    'type' => 'integer',
    'description' => t("The unique mail template ID."),
  );
  return $info;
}

/**
 * Implements hook_permission().
 */
function mchammer_permission() {
  return array(
    'administer mail templates' =>  array(
      'title' => t('Administer mail templates'),
      'description' => t('Add and edit mail templates.'),
    ),
  );
}

/**
 * Determines whether the given user has access to a mail.
 */
function mail_template_access() {
  return user_access('administer mail templates');
}

/**
 * Loads a field-collection item.
 *
 * @return field_collection_item
 *   The field_collection_item object or FALSE.
 */
function mail_template_load($item_id) {
  $result = entity_load('mail_template', array($item_id));
  return $result ? reset($result) : FALSE;
}