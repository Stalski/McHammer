<?php
/*
 * @file
 *
 */

/**
 * Implements hook_menu().
 */
function mchammer_menu() {

  $items = array();

  $items['admin/structure/mchammer'] = array(
    'title' => 'MC HAMMER dashboard',
    'access arguments' => array('administer mail templates'),
    'page callback' => 'system_admin_menu_block_page',
    'position' => 'left',
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
    'weight' => 1,
    'type' => MENU_NORMAL_ITEM,
  );

  $items['mchammer/%mchammer_mail_template'] = array(
    'title' => 'Mail template',
    'access arguments' => array('preview mail templates'),
    'page callback' => 'mchammer_mail_template_page',
    'page arguments' => array(1),
    'file' => 'mchammer.pages.inc',
    'type' => MENU_CALLBACK,
  );

  $items['mchammer/%mchammer_newsletter'] = array(
    'title' => 'Newsletter',
    'access arguments' => array('view all newsletters'),
    'page callback' => 'mchammer_newsletter_page',
    'page arguments' => array(1),
    'file' => 'mchammer.pages.inc',
    'type' => MENU_CALLBACK,
  );

  return $items;

}

/**
 * Implements hook_ctools_plugin_directory().
 */
function mchammer_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && ($plugin == 'export_ui' || $plugin == 'layouts')) {
    return "plugins/$plugin";
  }
  elseif ($module == 'panels' && !empty($plugin)) {
    return "plugins/$plugin";
  }
}

/**
 * List callback to show templates through CTools.
 */
function mchammer_mail_templates_list() {

  $names = array();
  ctools_include('export');
  foreach(ctools_export_crud_load_all('mchammer_mail_templates') as $template) {
    $names[$template->mtid] = $template->title;
  }

  return $names;

}
/**
 * Get the display cache for the panels_mini plugin.
 */
function _mchammer_panels_cache_get($key) {
  ctools_include('export-ui');
  $plugin = ctools_get_export_ui('mail_templates.export_ui');
  $handler = ctools_export_ui_get_handler($plugin);
  if (!$handler) {
    return;
  }

  $item = $handler->edit_cache_get($key);
  if (!$item) {
    $item = ctools_export_crud_load($handler->plugin['schema'], $key);
  }

  return array($handler, $item);
}

/**
 * Get display edit cache for the MCHammer mail templates export UI
 *
 * The key is the second half of the key in this form:
 * mchammer:TASK_NAME:HANDLER_NAME;
 */
function mchammer_panels_cache_get($key) {
  ctools_include('common', 'panels');
  list($handler, $item) = _mchammer_panels_cache_get($key);
  if (isset($item->mchammer_display_cache)) {
    return $item->mchammer_display_cache;
  }

  $cache = new stdClass();
  $cache->display = $item->display;
  $cache->display->cache_key = 'mchammer:' . $key;
  $cache->content_types = panels_common_get_allowed_types('mchammer', $cache->display->context);
  $cache->display_title = TRUE;

  // @TODO support locking
  $cache->locked = FALSE;

  return $cache;
}

/**
 * Store a display edit in progress in the page cache.
 */
function mchammer_panels_cache_set($key, $cache) {
  list($handler, $item) = _mchammer_panels_cache_get($key);
  $item->mchammer_display_cache = $cache;
  $handler->edit_cache_set_key($item, $key);
}

/**
 * Save all changes made to a display using the MCHammer mail templates UI cache.
 */
function mchammer_panels_cache_clear($key, $cache) {
  list($handler, $item) = _mchammer_panels_cache_get($key);
  $handler->edit_cache_clear($item);
}

/**
 * Save all changes made to a display using the MCHammer mail templates UI cache.
 */
function mchammer_panels_cache_save($key, $cache) {
  list($handler, $item) = _mchammer_panels_cache_get($key);
  $item->display = $cache->display;
  dsm($item);
  mchammer_mail_template_save($item);
  $handler->edit_cache_clear($item);
}

/**
 * Break the lock on a panels MCHammer mail template.
 */
function mchammer_panels_cache_break_lock($key, $cache) {
}

/**
 * Implements hook_permission().
 */
function mchammer_permission() {
  return array(
    'administer mail templates' =>  array(
      'title' => t('Administer mail templates'),
      'description' => t('Add and edit mail templates.'),
    ),
    'preview mail templates' => array(
      'title' => t('Preview mail templates'),
      'description' => t('Preview mail templates')
    ),
    'view all newsletters' => array(
      'title' => t('View all newsletters'),
      'description' => t('View all newsletters')
    ),
  );
}

/**
 * Determines whether the given user has access to a mail.
 */
function mail_template_access() {
  return user_access('administer mail templates');
}

/**
 * Load a mchammer mail template.
 */
function mchammer_mail_template_load($name) {
  return mchammer_ctools_crud_load($name, 'mchammer_mail_templates');
}

/**
 * Write a McHammer mail template to the database.
 */
function mchammer_mail_template_save(&$mail_template) {
  return mchammer_ctools_crud_save($mail_template, 'mchammer_mail_templates', 'mtid');
}

/**
 * Load a mchammer newsletter.
 */
function mchammer_newsletter_load($name) {
  return mchammer_ctools_crud_load($name, 'mchammer_newsletters');
}

/**
 * Write a McHammer newsletter to the database.
 */
function mchammer_newsletter_save(&$mail_template) {
  return mchammer_ctools_crud_save($mail_template, 'mchammer_newsletters', 'mnid');
}

/**
 * Helper function to load a cached display of CTools export objects
 * inside McHammer.
 */
function mchammer_ctools_crud_load($name, $table) {

  $cache = &drupal_static($table, array());

  // We use array_key_exists because failed loads will be NULL and
  // isset() will try to load it again.
  if (!array_key_exists($name, $cache)) {
    ctools_include('export');
    $result = ctools_export_load_object($table, 'names', array($name));
    if (isset($result[$name])) {
      if (!empty($result[$name]->did)) {
        $result[$name]->display = panels_load_display($result[$name]->did);
        if (!empty($result[$name]->title) && empty($result[$name]->display->title)) {
          $result[$name]->display->title = $result[$name]->title;
        }
      }
      $cache[$name] = $result[$name];
      if (!empty($result[$name]->title)) {
        $cache[$name]->title = $result[$name]->title;
      }
    }
    else {
      $cache[$name] = NULL;
    }
  }

  if (isset($cache[$name])) {
    return $cache[$name];
  }

}

/**
 * Helper function to save a cached display of CTools export objects
 * inside McHammer.
 */
function mchammer_ctools_crud_save(&$object, $table, $id) {

  if (!empty($object->display)) {
    $display = panels_save_display($object->display);
    $object->did = $display->did;
  }

  $update = (isset($object->$id) && $object->$id != 'new') ? array($id) : array();
  drupal_write_record($table, $object, $update);

  return $object;

}